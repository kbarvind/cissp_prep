
Secure Design Principles

Least Privilege 
ensures that users, systems, and applications operate with the minimum level of access required to perform their tasks. This reduces the attack surface and limits potential damage if credentials are compromised.

Separation of Duties 
ensures that critical tasks require multiple individuals to prevent fraud or mistakes.
Separation of Duties (SoD) is a fundamental security principle that ensures no single person has complete control over a critical process. This prevents fraud, abuse, and insider threats by requiring multiple individuals to be involved in sensitive tasks.
	‚Ä¢	Key Purpose:
	‚Ä¢	Prevents conflicts of interest, fraud, and errors.
	‚Ä¢	Ensures accountability by distributing responsibilities.
	‚Ä¢	Commonly used in financial transactions, security administration, and IT operations.

‚úÖ Example:
	‚Ä¢	In a bank, the person who requests a money transfer should not be the same person who approves it.
	‚Ä¢	In IT security, the developer who writes code should not be the same person who pushes it to production without an independent review.

Defense in Depth 
is a multi-layered security approach combining multiple defensive mechanisms.

Defense in Depth (DiD) is a security strategy that uses multiple layers of security controls to protect systems, networks, and data. The idea is that if one layer fails, other layers still provide protection.

üîπ Key Principles of Defense in Depth:
‚úî Multiple layers of security (firewalls, IDS, encryption, access control, etc.)
‚úî Redundant controls to minimize risk
‚úî Applies at different levels (physical, network, application, data security)
‚úî Based on the principle that no single security control is foolproof

‚úÖ Example:
	‚Ä¢	A company secures a web application using:
	‚Ä¢	Firewall to block unauthorized access üî•
	‚Ä¢	Intrusion Detection System (IDS) to monitor traffic üîç
	‚Ä¢	Multi-Factor Authentication (MFA) for user access üîë
	‚Ä¢	Data Encryption to protect stored information üîê

Fail-Safe Defaults  
ensures that systems deny access by default unless explicitly granted.

Need to Know
This principle restricts access to only the information required for a task, but does not ensure duties are split between multiple people.


Perimeter Security
Focuses only on the outer defenses (e.g., firewalls, access controls) but does not involve multiple layers inside the system.

Security through Obscurity
Relies on hiding system details instead of applying actual security measures.
	‚Ä¢	Example: Changing port numbers or not disclosing software versions but not securing them.


Bounds
Definition:
	‚Ä¢	Bounds define the limits of a process‚Äôs execution environment (e.g., memory, CPU, I/O access).
	‚Ä¢	They prevent a process from accessing data or resources outside its assigned boundaries.
Example:
	‚Ä¢	A web browser running in a sandbox cannot access system files.
	‚Ä¢	A process in a virtual machine (VM) cannot affect processes running on the host.
Use Case:
	‚Ä¢	Enforcing memory protection (e.g., stack and heap boundaries).
	‚Ä¢	Preventing unauthorized resource access (e.g., SELinux enforcing security boundaries).

Confinement
Definition:
	‚Ä¢	Confinement ensures that a process cannot leak data or perform unauthorized actions beyond its allowed environment.
	‚Ä¢	It prevents a process from communicating outside its permitted domain.
Example:
	‚Ä¢	Mandatory Access Control (MAC), like SELinux, AppArmor, or sandboxing, ensures that a process can only access predefined resources.
	‚Ä¢	Virtual Machines (VMs) confining a guest OS to prevent it from affecting the host OS.
Use Case:
	‚Ä¢	Preventing malware from exfiltrating data.
	‚Ä¢	Restricting web apps from accessing local system files (e.g., browser sandboxing).

‚∏ª

### **Understanding the Ring Protection Model**  
The model consists of **four privilege levels (rings),** numbered from **Ring 0 (highest privilege) to Ring 3 (lowest privilege):**

| Ring | Privilege Level | Description | Example |
|------|----------------|-------------|---------|
| **Ring 0** | **Highest (Most Privileged)** | Direct hardware access, executes kernel code, manages memory | Operating System Kernel (Windows, Linux) |
| **Ring 1** | **Moderate Privilege** | Device drivers, lower-level OS functions | Some system services, device drivers |
| **Ring 2** | **Limited Privilege** | System utilities, network services | Virtual Machine Monitors (VMMs) |
| **Ring 3** | **Lowest (Least Privileged)** | User applications, cannot directly access hardware | Web browsers, Office applications, user programs |

üîπ **Kernel Mode vs. User Mode:**  
- **Ring 0 (Kernel Mode):** Direct hardware interaction, full system control.  
- **Ring 3 (User Mode):** Runs applications with restricted access.

---

### **How It Works in Modern Systems**  
Most modern operating systems (Windows, Linux, macOS) use **only two primary rings:**  
1. **Ring 0 (Kernel Mode)** ‚Äì Operating System Kernel  
2. **Ring 3 (User Mode)** ‚Äì Applications & User Processes  



---
Security Models:

The Bell-LaPadula Model is focused on confidentiality and enforces the ‚ÄúNo Read Up, No Write Down‚Äù (*Simple Security Property and Star Property). It prevents unauthorized disclosure of classified data but does not prioritize integrity.

The Bell-LaPadula (BLP) Model is a confidentiality-focused security model that ensures only authorized users can read data but they cannot modify it if their clearance level is lower.
	‚Ä¢	Key Concept: ‚ÄúNo Read Up, No Write Down‚Äù
	‚Ä¢	Subjects (users, processes) cannot read data at a higher security level than their clearance (No Read Up, or NRU).
	‚Ä¢	Subjects cannot write to a lower security level (No Write Down, or NWD), preventing data leaks.
	‚Ä¢	Used in: Government and military systems, where protecting confidentiality is critical.

‚úÖ Example:
	‚Ä¢	A Confidential-level user cannot access a Top Secret file (No Read Up).
	‚Ä¢	A Top Secret user cannot write data into a Confidential file (No Write Down), ensuring sensitive information does not leak to lower levels.


Simple Security Property (No Read Up - NRU)
Rule: Cannot read from a higher classification level.
Purpose: Prevents unauthorized disclosure of sensitive data.

Star Security Property (No Write Down - NWD)
Rule: Cannot write to a lower classification level.
Purpose: Prevents data leakage to less secure levels.


The Biba Model enforces integrity and prevents unauthorized modification of data. It follows the ‚ÄúNo Write Up, No Read Down‚Äù rule, ensuring that only authorized users can modify data correctly.

Biba is an integrity model, not a confidentiality model. It enforces:
	‚Ä¢	‚ÄúNo Write Up, No Read Down‚Äù
	‚Ä¢	Prevents modifying data at a higher integrity level.

Simple Integrity Property (No Read Down - NRD)
Rule: Cannot read from a lower integrity level.
Purpose: Prevents contamination from untrusted sources.

Star Integrity Property (No Write Up - NWU)
Rule: Cannot write to a higher integrity level.
Purpose: Prevents low-integrity subjects from corrupting high-integrity data.

Clark-Wilson Model also focuses on integrity but emphasizes well-formed transactions and separation of duties.
Focuses on data integrity using well-formed transactions and separation of duties. Used in banking and business, not confidentiality protection.
Focuses on integrity (not confidentiality) by enforcing well-formed transactions and separation of duties.
	‚Ä¢	Example: Used in financial and banking systems to prevent fraud.


Brewer-Nash Model (Chinese Wall Model) prevents conflicts of interest in business environments.
Used to prevent conflicts of interest, mainly in finance. It controls access based on previous interactions with data but does not protect confidentiality

Also known as the Chinese Wall Model, it prevents conflicts of interest by restricting access to certain datasets.
	‚Ä¢	Example: Used in financial firms and law offices to prevent insider trading.

----

State Machine Model (SMM) - CISSP Explanation

What is the State Machine Model?

The State Machine Model is a mathematical model used in security to define system behavior at any given time. It ensures that the system transitions from one secure state to another secure state, meaning that the system is always in a consistent and protected condition.

üîπ A system is represented as a finite set of states.
üîπ Each state must meet security policies before transitioning to another state.
üîπ A secure state means all security properties (like confidentiality, integrity, and availability) are maintained.

---

Access Control Type:

Mandatory Access Control (MAC) 
is a security model where access is determined by security labels (classifications) assigned to both users and objects. Users cannot modify access controls, and only the system enforces policies. It is commonly used in military and government environments.

Mandatory Access Control (MAC) is the most commonly used access control model in military and government environments because it enforces strict security policies based on classifications and clearances. It ensures confidentiality by restricting access based on predefined rules set by a central authority.
	‚Ä¢	Key Characteristics of MAC:
	1.	Centralized Control: The system (not the user) controls access permissions.
	2.	Security Labels: Every object (file, document) and subject (user, process) has a classification level (e.g., Top Secret, Secret, Confidential, Unclassified).
	3.	No User Discretion: Users cannot modify permissions‚Äîonly security administrators can.
	4.	Used in High-Security Environments: Common in government, military, and classified data systems.

‚úÖ Example:
	‚Ä¢	A government system has files labeled ‚ÄúTop Secret,‚Äù ‚ÄúSecret,‚Äù ‚ÄúConfidential,‚Äù and ‚ÄúUnclassified.‚Äù
	‚Ä¢	A user with a ‚ÄúSecret‚Äù clearance cannot access a ‚ÄúTop Secret‚Äù document, even if they work in the same department.

Discretionary Access Control (DAC) 
allows owners to set permissions for objects they create.
In DAC, owners of objects (files, data) decide who can access them. This is used in most commercial systems (e.g., Windows, Linux), but it does not enforce strict security policies like MAC.

Discretionary Access Control (DAC) is a type of access control where the data owner has the ability to determine who can access their files.
	‚Ä¢	Key Features of DAC:
	‚Ä¢	User-driven control: The file owner decides permissions (read, write, execute).
	‚Ä¢	Flexibility: Permissions can be granted or revoked dynamically by the owner.
	‚Ä¢	Common in operating systems: Used in Windows NTFS permissions and Linux file permissions (chmod, chown).

‚úÖ Example:
	‚Ä¢	In Windows, if a user creates a file, they can set permissions on it (e.g., allow or deny access to other users).
	‚Ä¢	In Linux, the file owner can use chmod to modify access permissions for different users.

Role-Based Access Control (RBAC) 
grants permissions based on roles assigned to users rather than individual labels.
While RBAC assigns permissions based on roles (e.g., Manager, Engineer), it is not as strict as MAC. Users can change roles and permissions can be updated dynamically. Used in businesses, not military environments.

Attribute-Based Access Control (ABAC) 
uses dynamic policies based on user attributes, environment, and resource conditions to grant access.
ABAC allows access based on attributes (e.g., user‚Äôs department, location, time of access). It is flexible and dynamic, but not primarily used in military settings, where rigid classification rules apply.

---
Security Controls

Security controls are classified into three main categories:
1.	Preventive controls ‚Äì 
Stop security incidents from occurring.

2.	Detective controls ‚Äì 
Identify security incidents after they happen.

3.	Corrective controls ‚Äì 
Respond to and mitigate the impact of security incidents.

---
Cryptographic Attacks:

1. MIM Attack
An interception attack where an attacker actively alters communication between two parties
Targets double encryption schemes (e.g., 2DES) by attacking the middle layer, not related to power consumption.

A Man-in-the-Middle (MITM) Attack occurs when an attacker intercepts and alters communication between two parties without their knowledge. The attacker secretly relays, modifies, or steals the data before forwarding it to its intended destination.

How MITM Attacks Work?

üîπ Interception ‚Äì The attacker places themselves between the victim and the intended recipient (e.g., a website or another person).
üîπ Eavesdropping ‚Äì They can read the messages exchanged between both parties.
üîπ Modification ‚Äì The attacker alters the messages before forwarding them to either party.
üîπ Stealing Data ‚Äì They can capture sensitive information like login credentials, banking details, or personal messages.


Common MITM Attack Techniques:

1Ô∏è‚É£ Wi-Fi Eavesdropping ‚Äì Attackers set up fake Wi-Fi hotspots in public places (e.g., ‚ÄúFree Starbucks Wi-Fi‚Äù) and capture unencrypted traffic.
2Ô∏è‚É£ Session Hijacking ‚Äì Attackers steal cookies to gain access to an active web session (e.g., logged-in accounts).
3Ô∏è‚É£ HTTPS Spoofing ‚Äì They trick victims into visiting a fake website that looks identical to the real one (e.g., a fake banking login page).
4Ô∏è‚É£ SSL Stripping ‚Äì Attackers downgrade an HTTPS connection to HTTP, making it unencrypted and easy to read.
5Ô∏è‚É£ ARP Spoofing ‚Äì They manipulate the Address Resolution Protocol (ARP) to intercept network traffic within a LAN.



2. Chosen-plaintext attack
Requires the attacker to encrypt chosen plaintexts and observe the outputs, but doesn‚Äôt involve power analysis.

3. Differential power analysis
Differential Power Analysis (DPA) is an advanced side-channel attack that analyzes power consumption patterns during cryptographic operations to extract sensitive data, such as private keys

4. Lattice-based attack
Exploits weaknesses in public-key cryptosystems (like RSA or ECC) using lattice structures, not power data

Lattice-based cryptography is a post-quantum cryptographic technique that relies on the difficulty of solving lattice problems, such as the Shortest Vector Problem (SVP) and the Learning With Errors (LWE) problem

Why is it quantum-resistant?
	‚Ä¢	Quantum computers can break RSA and ECC using Shor‚Äôs algorithm.
	‚Ä¢	Lattice problems remain hard even for quantum computers, making them a strong candidate for post-quantum cryptography (PQC).
	‚Ä¢	Examples of lattice-based cryptographic schemes: NTRUEncrypt, Kyber, and Dilithium (some are part of the NIST PQC standardization process).
    

5. Rainbow table attack

A rainbow table attack is a password cracking technique where attackers use precomputed hash values of passwords instead of hashing each guess individually. This method makes cracking hashed passwords much faster than traditional brute-force attacks.

How it Works:
	1.	Precompute Hashes: Attackers generate a massive table of passwords and their corresponding hash values (e.g., using MD5, SHA-1, SHA-256).
	2.	Compare with Stolen Hashes: When they obtain a list of hashed passwords (e.g., from a data breach), they simply match hashes from their precomputed table.
	3.	Recover Plaintext Passwords: Once a match is found, the corresponding plaintext password is revealed.



7 Denial-of-Service (DoS) Attack
Overloads a server with traffic, causing it to crash, but does NOT involve message interception

8 SQL Injection
An attack targeting databases by injecting malicious SQL queries, but NOT related to communication interception

9 Buffer Overflow Attack
A Buffer Overflow Attack occurs when a program writes more data to a buffer (temporary storage area) than it can hold. This extra data can overwrite adjacent memory, potentially allowing an attacker to execute arbitrary code.

üîπ Why Do Attackers Use Buffer Overflow?
‚úî Gain Unauthorized Access: Attackers inject malicious code into the program‚Äôs memory.
‚úî Execute Arbitrary Code: The attacker‚Äôs payload can take control of the system.
‚úî Privilege Escalation: If executed correctly, this can lead to root/admin access.

üìå Example of Buffer Overflow Attack:
	‚Ä¢	Classic Example: A vulnerable application allows user input to exceed buffer size, overwriting return addresses in memory.
	‚Ä¢	Result: The attacker injects shellcode, causing the program to execute malicious commands.


10 TOCTOU Attack (Time-of-Check to Time-of-Use)

TOCTOU (Time-of-Check to Time-of-Use) attack is a race condition vulnerability where an attacker exploits the time gap between checking a resource (e.g., a file, memory, or variable) and using it. If the state of the resource changes between these two operations, it can lead to unexpected or malicious behavior.

How TOCTOU Works
	1.	Time-of-Check (TOC) ‚Äì The system checks a condition (e.g., verifying file permissions, confirming a user‚Äôs access).
	2.	Time-of-Use (TOU) ‚Äì The system uses the resource (e.g., opens a file, executes a command).
	3.	Exploitation ‚Äì The attacker modifies the resource between these two steps, leading to unauthorized access or execution.


----
Cryptographic & Vulnerability

Symmetric

AES (Advanced Encryption Standard)
A symmetric encryption algorithm
The Advanced Encryption Standard (AES) is the most widely used encryption algorithm for securing data at rest (e.g., stored data on hard drives, databases, or cloud storage).

Why AES?
‚úî Symmetric encryption ‚Äì Uses the same key for encryption and decryption.
‚úî Highly secure ‚Äì AES-256 is recommended by NIST and used by governments, financial institutions, and cloud providers.
‚úî Fast & efficient ‚Äì Works well for large volumes of data with minimal performance overhead.

üìå Real-World Uses:
‚úÖ Encrypting files & folders (BitLocker, VeraCrypt, FileVault)
‚úÖ Database encryption (Oracle TDE, Microsoft SQL Server)
‚úÖ Full disk encryption (Windows BitLocker, macOS FileVault)

3DES
(Triple Data Encryption Standard) ‚Äì 3DES is another symmetric encryption algorithm like AES. It is not used for digital signatures or authentication, only for encrypting data.


Asymmetric
Elliptic Curve Cryptography (ECC) ‚Äì Vulnerable to quantum attacks using Shor‚Äôs algorithm
A cryptographic system that provides encryption.

Elliptic Curve Cryptography (ECC) is a powerful cryptographic technique that offers the same level of security as RSA but with much smaller key sizes.

üîπ Why is ECC Better Than RSA?
‚úî Shorter Key Lengths: An ECC 256-bit key provides the same security as an RSA 3072-bit key.
‚úî Faster Computation: Requires less processing power and lower energy consumption, making it ideal for mobile devices, IoT, and embedded systems.
‚úî Strong Security: The complexity of solving the Elliptic Curve Discrete Logarithm Problem (ECDLP) makes it highly secure.

üìå Example:
	‚Ä¢	A 256-bit ECC key provides security equivalent to a 3072-bit RSA key.
	‚Ä¢	A 521-bit ECC key is as strong as a 15,360-bit RSA key‚Äîhuge savings in computational resources!

RSA ‚Äì Also broken by Shor‚Äôs algorithm on a large enough quantum computer
Used for asymmetric encryption and digital signatures
RSA (Rivest-Shamir-Adleman) is a widely used asymmetric encryption algorithm that supports digital signatures, authentication, and data integrity. It is commonly used in SSL/TLS certificates, email encryption, and secure authentication systems.
	‚Ä¢	Key Features of RSA:
	‚Ä¢	Asymmetric encryption: Uses a public key for encryption and a private key for decryption.
	‚Ä¢	Digital Signatures: RSA enables signing messages to verify authenticity and integrity.
	‚Ä¢	Used in Public Key Infrastructure (PKI) for secure communications.

‚úÖ Example:
	‚Ä¢	When signing a document, the sender encrypts the hash of the message with their private key.
	‚Ä¢	The recipient can then verify the signature using the sender‚Äôs public key to ensure authenticity and integrity.


Diffie-Hellman Key Exchange ‚Äì Used for secure key exchange

The Diffie-Hellman Key Exchange (DHKE) is a cryptographic technique that allows two parties to securely compute a shared secret over an insecure communication channel without actually transmitting the secret itself.

üîπ How it Works:
	1.	Each party generates a private key and a corresponding public key.
	2.	They exchange public keys over the insecure channel.
	3.	Using their private key and the received public key, they derive the same shared secret.
	4.	This shared secret can then be used to encrypt future communications.

üìå Real-World Use:
‚úî Used in TLS (Transport Layer Security) for secure web communications.
‚úî Used in VPNs to establish secure encrypted tunnels.

Hashing

SHA-256
(Secure Hash Algorithm 256-bit) ‚Äì SHA-256 is a hashing algorithm, not an encryption algorithm. While it helps ensure data integrity, it cannot encrypt data or be used for digital signatures.

HMAC (Hash-based Message Authentication Code) ‚Äì Used for message integrity and authentication

Hash-based cryptography ‚Äì Hash-based signatures (like Lamport and XMSS) are quantum-resistant but are used only for digital signatures, not for general encryption

zk-SNARKs (Zero-Knowledge Succinct Non-Interactive Argument of Knowledge) is a type of zero-knowledge proof (ZKP) protocol. It allows one party (the prover) to prove to another party (the verifier) that they know a value without revealing the value itself.

üîπ Key Features of zk-SNARKs:
‚úî Zero-Knowledge ‚Äì The verifier learns nothing beyond the truth of the statement.
‚úî Succinct ‚Äì Proofs are small and can be verified quickly.
‚úî Non-Interactive ‚Äì No back-and-forth interaction is required between the prover and verifier.

---


Wireless Security Protocol

WEP

WEP (Wired Equivalent Privacy) is the weakest and most insecure wireless security protocol. It was designed to provide security for Wi-Fi networks, but it has critical vulnerabilities that make it easy to break using modern tools.

‚∏ª

Why is WEP so Weak?

üî¥ Weak Encryption ‚Äì Uses the RC4 algorithm with static keys, which makes it easy to decrypt.
üî¥ Short Key Length ‚Äì Only supports 40-bit or 104-bit keys, which can be cracked in minutes.
üî¥ Lack of Integrity Protection ‚Äì Attackers can modify packets without being detected.
üî¥ Easy to Crack ‚Äì Even with basic tools like Aircrack-ng, hackers can break WEP encryption within minutes using packet capture techniques.

WPA2-PSK

Much stronger than WEP, uses AES encryption, but still vulnerable to some attacks (e.g., brute-force attacks if weak passwords are used).

WPA3

The most secure Wi-Fi protocol available today, using Simultaneous Authentication of Equals (SAE) to prevent brute-force attacks.

AES-CCMP

(AES-Counter Mode CBC-MAC Protocol) The encryption algorithm used in the 802.11i security protocol. It uses the AES block cipher, but restricts the key length to 128 bits. AES-CCMP incorporates two sophisticated cryptographic techniques (counter mode and CBC-MAC) and adapts them to Ethernet frames to provide a robust security protocol between the mobile client and the access point.

An encryption method used in WPA2 and WPA3, much more secure than WEP

---

Malware

1. Ransomware

Ransomware is a type of malware that encrypts files on a victim‚Äôs system, making them inaccessible. The attacker then demands a ransom payment (usually in cryptocurrency) in exchange for providing the decryption key.

üîπ Example: WannaCry (2017) was a global ransomware attack that locked thousands of computers and demanded Bitcoin payments to restore access.

How to Protect Against Ransomware?

‚úÖ Back up your data ‚Äì Keep offline and cloud backups.
‚úÖ Avoid suspicious email attachments & links ‚Äì Phishing is a major delivery method.
‚úÖ Use strong security software ‚Äì Anti-ransomware tools help detect threats early.
‚úÖ Keep systems updated ‚Äì Patch vulnerabilities to prevent exploits.
‚úÖ Implement least privilege access ‚Äì Restrict unnecessary admin access to reduce risk.


2. Trojan Horse

A Trojan Horse is a type of malware that masquerades as a legitimate program but secretly performs malicious activities in the background.

üîπ It tricks users into downloading or executing it by appearing harmless, but once activated, it can:
‚úî Steal sensitive information (passwords, financial data, etc.)
‚úî Provide remote access to hackers (backdoors)
‚úî Install additional malware (ransomware, spyware, etc.)

Key Facts About Trojans:

‚úÖ Named after the ‚ÄúTrojan Horse‚Äù from Greek mythology, where a deceptive gift led to an attack inside Troy.
‚úÖ Unlike viruses or worms, Trojans do not self-replicate‚Äîthey need user interaction.
‚úÖ Common Trojan Types:
	‚Ä¢	Backdoor Trojans ‚Äì Give hackers remote control.
	‚Ä¢	Spyware Trojans ‚Äì Steal data and monitor activity.
	‚Ä¢	Banking Trojans ‚Äì Target financial details.
	‚Ä¢	Downloader Trojans ‚Äì Install other malware.
	
3. Worm

Worms self-replicate and spread across networks without user interaction, unlike Trojans, which require execution by the user

4. Rootkit

Rootkits are designed to hide malicious activity and maintain access to a system, but they don‚Äôt disguise themselves as normal programs like Trojans do.


Common Methods for Malware Detection

1. Signature-Based Detection ‚Äì 
Uses a database of known malware signatures to identify threats.

2. Heuristic Analysis ‚Äì 
Detects new or modified malware by analyzing its behavior and structure.

3. Behavioral Analysis ‚Äì 
Monitors real-time activities to identify suspicious or malicious behavior.

----




